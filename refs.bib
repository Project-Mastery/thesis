@article{martinez-gilModelingEvaluationScale2017,
  title = {Modeling, {{Evaluation}}, and {{Scale}} on {{Artificial Pedestrians}}: {{A Literature Review}}},
  shorttitle = {Modeling, {{Evaluation}}, and {{Scale}} on {{Artificial Pedestrians}}},
  author = {{Martinez-Gil}, Francisco and Lozano, Miguel and {Garc{\'i}a-Fern{\'a}ndez}, Ignacio and Fern{\'a}ndez, Fernando},
  year = {2017},
  month = sep,
  journal = {ACM Comput. Surv.},
  volume = {50},
  number = {5},
  pages = {72:1--72:35},
  issn = {0360-0300},
  doi = {10.1145/3117808},
  urldate = {2025-05-17},
  abstract = {Modeling pedestrian dynamics and their implementation in a computer are challenging and important issues in the knowledge areas of transportation and computer simulation. The aim of this article is to provide a bibliographic outlook so that the reader may have quick access to the most relevant works related to this problem. We have used three main axes to organize the article's contents: pedestrian models, validation techniques, and multiscale approaches. The backbone of this work is the classification of existing pedestrian models; we have organized the works in the literature under five categories, according to the techniques used for implementing the operational level in each pedestrian model. Then the main existing validation methods, oriented to evaluate the behavioral quality of the simulation systems, are reviewed. Furthermore, we review the key issues that arise when facing multiscale pedestrian modeling, where we first focus on the behavioral scale (combinations of micro and macro pedestrian models) and second on the scale size (from individuals to crowds). The article begins by introducing the main characteristics of walking dynamics and its analysis tools and concludes with a discussion about the contributions that different knowledge fields can make in the near future to this exciting area.},
}

@article{kleinmeierVadereOpenSourceSimulation2019,
  title = {Vadere: {{An Open-Source Simulation Framework}} to {{Promote Interdisciplinary Understanding}}},
  shorttitle = {Vadere},
  author = {Kleinmeier, Benedikt and Zönnchen, Benedikt and Gödel, Marion and Köster, Gerta},
  date = {2019-09-03},
  journaltitle = {Collective Dynamics},
  volume = {4},
  pages = {1--34},
  issn = {2366-8539},
  doi = {10.17815/CD.2019.21},
  url = {https://collective-dynamics.eu/index.php/cod/article/view/A21},
  urldate = {2024-11-08},
  abstract = {Pedestrian dynamics is an interdisciplinary field of research. Psychologists, sociologists, traffic engineers, physicists, mathematicians and computer scientists all strive to understand the dynamics of a moving crowd. In principle, computer simulations offer means to further this understanding. Yet, unlike for many classic dynamical systems in physics, there is no universally accepted locomotion model for crowd dynamics. On the contrary, a multitude of approaches, with very different characteristics, compete. Often only the experts in one special model type are able to assess the consequences these characteristics have on a simulation study. Therefore, scientists from all disciplines who wish to use simulations to analyze pedestrian dynamics need a tool to compare competing approaches. Developers, too, would profit from an easy way to get insight into an alternative modeling ansatz. Vadere meets this interdisciplinary demand by offering an open-source simulation framework that is lightweight in its approach and in its user interface while offering pre-implemented versions of the most widely spread models.},
  langid = {english},
  keywords = {agents,crowds,pedestrians},
}

@article{helbingSocialForceModel1995,
  title = {Social {{Force Model}} for {{Pedestrian Dynamics}}},
  author = {Helbing, Dirk and Molnar, Peter},
  date = {1995-05-01},
  journaltitle = {Physical Review E},
  shortjournal = {Phys. Rev. E},
  volume = {51},
  number = {5},
  eprint = {cond-mat/9805244},
  eprinttype = {arXiv},
  pages = {4282--4286},
  issn = {1063-651X, 1095-3787},
  doi = {10.1103/PhysRevE.51.4282},
  url = {http://arxiv.org/abs/cond-mat/9805244},
  urldate = {2025-05-17},
  abstract = {It is suggested that the motion of pedestrians can be described as if they would be subject to `social forces'. These `forces' are not directly exerted by the pedestrians' personal environment, but they are a measure for the internal motivations of the individuals to perform certain actions (movements). The corresponding force concept is discussed in more detail and can be also applied to the description of other behaviors. In the presented model of pedestrian behavior several force terms are essential: First, a term describing the acceleration towards the desired velocity of motion. Second, terms reflecting that a pedestrian keeps a certain distance to other pedestrians and borders. Third, a term modeling attractive effects. The resulting equations of motion are nonlinearly coupled Langevin equations. Computer simulations of crowds of interacting pedestrians show that the social force model is capable of describing the self-organization of several observed collective effects of pedestrian behavior very realistically.},
  keywords = {Condensed Matter - Statistical Mechanics,Nonlinear Sciences - Pattern Formation and Solitons,Pattern Formation and Solitons},
}

@article{helbingSimulatingDynamicFeatures2000,
  title = {Simulating {{Dynamic Features}} of {{Escape Panic}}},
  author = {Helbing, Dirk and Farkas, Illés and Vicsek, Tamás},
  date = {2000-09-28},
  journaltitle = {Nature},
  shortjournal = {Nature},
  volume = {407},
  pages = {487--490},
  doi = {10.1038/35035023},
  abstract = {One of the most disastrous forms of collective human behaviour is the kind of crowd stampede induced by panic, often leading to fatalities as people are crushed or trampled. Sometimes this behaviour is triggered in life-threatening situations such as fires in crowded buildings; at other times, stampedes can arise during the rush for seats or seemingly without cause. Although engineers are finding ways to alleviate the scale of such disasters, their frequency seems to be increasing with the number and size of mass events. But systematic studies of panic behaviour and quantitative theories capable of predicting such crowd dynamics are rare. Here we use a model of pedestrian behaviour to investigate the mechanisms of (and preconditions for) panic and jamming by uncoordinated motion in crowds. Our simulations suggest practical ways to prevent dangerous crowd pressures. Moreover, we find an optimal strategy for escape from a smoke-filled room, involving a mixture of individualistic behaviour and collective 'herding' instinct.},
}

@software{bevy,
  author = {Bevy Engine},
  title = {Bevy},
  url = {https://bevyengine.org/},
  version = {0.16.0},
  date = {2025-06-24},
}

@software{flecs,
  author = {{SanderMertens}},
  title = {Flecs},
  url = {https://www.flecs.dev/flecs/},
  version = {4.0.5},
  date = {2025-03-18},
}

@software{unityDots,
  author = {{Unity Technologies}},
  title = {DOTS - Unity's Data-Oriented Technology Stack},
  url = {https://unity.com/dots},
  version = {6.1},
  date = {2025-06-10},
}

@software{legion,
  author = {Amethyst Foundation},
  title = {Legion},
  url = {https://github.com/amethyst/legion},
  version = {0.4.0},
  date = {2021-02-25},
}

@software{hecs,
  author = {Benjamin Saunders},
  title = {hecs},
  url = {https://github.com/Ralith/hecs},
  version = {0.10.5},
  date = {2024-05-05},
}

@software{entt,
  author = {Michele Caini},
  title = {EnTT},
  url = {https://github.com/skypjack/entt},
  version = {3.15.0},
  date = {2025-03-19},
}

@software{shipyard,
  author = {Michele Caini},
  title = {Dylan Ancel},
  url = {https://github.com/leudz/shipyard},
  version = {0.8},
  date = {2025-03-31},
}

@software{entityx,
  author = {Alec Thomas},
  title = {EntityX - A fast, type-safe C++ Entity Component System},
  url = {https://github.com/alecthomas/entityx},
  version = {1.1.2},
  date = {2025-04-25},
}

@software{specs,
  author = {Amethyst Foundation},
  title = {Specs Parallel ECS},
  url = {https://amethyst.github.io/specs/},
  version = {0.20.0},
  date = {2023-09-25},
}

@article{kleinmeierVadereOpenSourceSimulation2019,
  title = {Vadere: {{An Open-Source Simulation Framework}} to {{Promote Interdisciplinary Understanding}}},
  shorttitle = {Vadere},
  author = {Kleinmeier, Benedikt and Zönnchen, Benedikt and Gödel, Marion and Köster, Gerta},
  date = {2019-09-03},
  journaltitle = {Collective Dynamics},
  volume = {4},
  pages = {1--34},
  issn = {2366-8539},
  doi = {10.17815/CD.2019.21},
  url = {https://collective-dynamics.eu/index.php/cod/article/view/A21},
  urldate = {2024-11-08},
  abstract = {Pedestrian dynamics is an interdisciplinary field of research. Psychologists, sociologists, traffic engineers, physicists, mathematicians and computer scientists all strive to understand the dynamics of a moving crowd. In principle, computer simulations offer means to further this understanding. Yet, unlike for many classic dynamical systems in physics, there is no universally accepted locomotion model for crowd dynamics. On the contrary, a multitude of approaches, with very different characteristics, compete. Often only the experts in one special model type are able to assess the consequences these characteristics have on a simulation study. Therefore, scientists from all disciplines who wish to use simulations to analyze pedestrian dynamics need a tool to compare competing approaches. Developers, too, would profit from an easy way to get insight into an alternative modeling ansatz. Vadere meets this interdisciplinary demand by offering an open-source simulation framework that is lightweight in its approach and in its user interface while offering pre-implemented versions of the most widely spread models.},
  langid = {english},
  keywords = {agents,crowds,pedestrians},
}

@article{seitzSuperpositionPrincipleConceptual2016,
  title = {The {{Superposition Principle}}: {{A Conceptual Perspective}} on {{Pedestrian Stream Simulations}}},
  shorttitle = {The {{Superposition Principle}}},
  author = {Seitz, Michael J. and Dietrich, Felix and Köster, Gerta and Bungartz, Hans-Joachim},
  date = {2016-03-15},
  journaltitle = {Collective Dynamics},
  volume = {1},
  pages = {1--19},
  issn = {2366-8539},
  doi = {10.17815/CD.2016.2},
  url = {https://collective-dynamics.eu/index.php/cod/article/view/A2},
  urldate = {2024-11-26},
  abstract = {Models using a superposition of scalar fields for navigation are prevalent in microscopic pedestrian stream simulations. However, classifications, differences, and similarities of models are not clear at the conceptual level of navigation mechanisms. In this paper, we describe the superposition of scalar fields as an approach to microscopic crowd modelling and corresponding motion schemes. We use this background discussion to focus on the similarities and differences of models, and find that many models make use of similar mechanisms for the navigation of virtual agents. In some cases, the differences between models can be reduced to differences between discretisation schemes. The interpretation of scalar fields varies across models, but most of the time this variation does not have a large impact on simulation outcomes. The conceptual analysis of different models of pedestrian dynamics allows for a better understanding of their capabilities and limitations and may lead to better model development and validation.},
  langid = {english},
  keywords = {comparison of models,Crowd models,discretisation,local optimisation,microscopic,pedestrians,scalar fields,simulation,social forces,superposition},
}

@software{cromosim,
  author = {Sylvain Faure},
  title = {Cromosim: Crowd Motion Simulation},
  url = {https://github.com/sylvain-faure/cromosim},
  version = {2.1.0},
  date = {2024-12-30},
}

@book{korhonenFireDynamicsSimulator2009,
  title = {Fire {{Dynamics Simulator}} with {{Evacuation}}: {{FDS}}+{{Evac}}: {{Technical Reference}} and {{User}}'s {{Guide}}},
  shorttitle = {Fire {{Dynamics Simulator}} with {{Evacuation}}},
  author = {Korhonen, Timo and Hostikka, Simo},
  year = {2009},
  series = {{{VTT Working Papers}}},
  publisher = {VTT Technical Research Centre of Finland},
  address = {Espoo},
  abstract = {This document describes how to simulate human egress using the evacuation module, FDS+Evac, which is fully embedded in Fire Dynamics Simulator (FDS). This manual applies to the FDS+Evac version is 2.1.1, which is embedded in the current FDS version 5.3.0. The most up to date version of this manual can be obtained from the FDS+Evac home page at http://www.vtt.fi/fdsevac/. The FDS+Evac Technical Reference and User's Guide does not contain information on how to operate FDS nor Smokeview, the companion visualisation programme for FDS. Their full capabilities are described in their documentation, which can be obtained from the FDS-SMV home page http://fire.nist.gov/fds/.},
  keywords = {crowd movement,escape modelling,evacuation,fire dynamics simulator,fire modelling},
}

@article{meinert2019simulation,
  title = {Simulation von {{Menschenmengen}} Im Urbanen {{Umfeld}} Mit {{OpenStreetMap-Daten}}},
  author = {Meinert, Axel and Hahmann, Stefan and Brausewetter, Patrick and Kopf, Stephan},
  year = {2019},
  journal = {gis. Science},
  abstract = {The simulation of pedestrians and crowds in urban environments is of great relevance for the planning of events, traffic and structural facilities, and in the development of evacuation scenarios. This article first provides an overview of suitable physicalmathematical simulation models, with a focus on the social force model. Another focus is the representation of pedestrians in the form of envelopes within the simulation. A software overview compares non-commercial programs for pedestrian simulation. It then analyzes the extent to which public geodata, such as OpenStreetMap data, can be used for corresponding simulations and which object types are suitable for pedestrian simulations. Building on this, the prototype implementation of the new, lightweight opensource software jCrowdSimulator, which simulates and visualizes pedestrians and crowds in urban environments, is presented. Finally, the results of the performance tests, which confirm a linear complexity with respect to the number of simulated people, are discussed.},
}

@inproceedings{kemlohwagoumJuPedSimOpenFramework2015,
  title = {{{JuPedSim}}: An Open Framework for Simulating and Analyzing the Dynamics of Pedestrians},
  shorttitle = {{{JuPedSim}}},
  author = {Kemloh Wagoum, Armel Ulrich and Chraibi, Mohcine and Zhang, Jun and L{\"a}mmel, Gregor},
  year = {2015},
  month = dec,
  abstract = {There is a wide range of simulation software used to investigate pedestrian dynamics. Most of these software are commercial or do not give an insight into the functionalities of their models. While this might be of little importance for many users, it is paramount for researchers to know exactly what the models are performing as this provides a better interpretation of the results. In this paper we introduce JuPedSim, the Jlich Pedestrian Simulator. JuPedSim is an extensible framework for simulating and analyzing pedestrians' motion at a microscopic level. It consists at the moment of three modules which are loosely coupled and can be used independently. The first module simulates the movement of pedestrians given a geometry and an initial configuration. Three-dimensional geometries are also supported. The start configuration includes the desired destinations, speeds, route choices and other demographic parameters. The second module visualizes the geometry and the trajectories. High resolution videos can also be recorded directly from the module interface. The third module analyses the results from the simulation or any other source, for instance experiments, and generates different type of plots such as densities, velocities and flows. This paper also introduces a new force-based model, which is designed for computing pedestrian trajectories in continuous space based on repulsive and attractive forces. In addition we describe the verification and validation process of the framework.},
}


@article{curtisMengeModularFramework2016,
  title = {Menge: {{A Modular Framework}} for {{Simulating Crowd Movement}}},
  shorttitle = {Menge},
  author = {Curtis, Sean and Best, Andrew and Manocha, Dinesh},
  date = {2016-03-15},
  journaltitle = {Collective Dynamics},
  volume = {1},
  pages = {1--40},
  issn = {2366-8539},
  doi = {10.17815/CD.2016.1},
  url = {https://collective-dynamics.eu/index.php/cod/article/view/A1},
  urldate = {2024-11-08},
  abstract = {We present Menge, a cross-platform, extensible, modular framework for simulating pedestrian movement in a crowd. ~Menge's architecture is inspired by an implicit decomposition of the problem of simulating crowds into component subproblems. ~These subproblems can typically be solved in many ways; different combinations of subproblem solutions yield crowd simulators with likewise varying properties. ~Menge creates abstractions for those subproblems and provides a plug-in architecture so that a novel simulator can be dynamically configured by connecting built-in and bespoke implementations of solutions to the various subproblems. ~Use of this type of framework could facilitate crowd simulation research, evaluation, and applications by reducing the cost of entering the domain, facilitating collaboration, and making comparisons between algorithms simpler. ~We show how the Menge framework is compatible with many prior models and algorithms used in crowd simulation and illustrate its flexibility via a varied set of scenarios and applications.},
  langid = {english},
  keywords = {crowd simulation,framework,open source,pedestrians,software system},
}

@article{kielarMomenTUMv2ModularExtensible2016,
  title = {{{MomenTUMv2}}: {{A Modular}}, {{Extensible}}, and {{Generic Agent-Based Pedestrian Behavior Simulation Framework}}},
  shorttitle = {{{MomenTUMv2}}},
  author = {Kielar, Peter M. and Biedermann, Daniel H. and Borrmann, Andr{\'e}},
  year = {2016},
  month = jan,
  langid = {english},
  keywords = {Implementation,Interface (matter)},
  annotation = {OpenAlex: https://openalex.org/W2754853122},
}

@inproceedings{SUMO2018,
  title = {Microscopic Traffic Simulation using SUMO},
  author = {Pablo Alvarez Lopez and Michael Behrisch and Laura Bieker-Walz and Jakob Erdmann and Yun-Pang Fl{\"o}tter{\"o}d and Robert Hilbrich and Leonhard L{\"u}cken and Johannes Rummel and Peter Wagner and Evamarie Wie{\ss}ner},
  publisher = {IEEE},
  booktitle = {The 21st IEEE International Conference on Intelligent Transportation Systems},
  year = {2018},
  journal = {IEEE Intelligent Transportation Systems Conference (ITSC)},
  keywords = {traffic simulation, modelling, optimization},
  url = {https://elib.dlr.de/124092/}
}

@software{mesa,
  author = {Project Mesa},
  title = {Mesa: Agent-based modeling in Python},
  url = {https://github.com/projectmesa/mesa},
  version = {3.2.0},
  date = {2025-05-08},
}

@article{hoevenMesa3Agentbased2025,
  title = {Mesa 3: {{Agent-based}} Modeling with {{Python}} in 2025},
  shorttitle = {Mesa 3},
  author = {ter Hoeven, Ewout and Kwakkel, Jan and Hess, Vincent and Pike, Thomas and Wang, Boyu and Rht and Kazil, Jackie},
  year = {2025},
  month = mar,
  journal = {Journal of Open Source Software},
  volume = {10},
  number = {107},
  pages = {7668},
  issn = {2475-9066},
  doi = {10.21105/joss.07668},
  urldate = {2025-07-21},
  abstract = {ter Hoeven et al., (2025). Mesa 3: Agent-based modeling with Python in 2025. Journal of Open Source Software, 10(107), 7668, https://doi.org/10.21105/joss.07668},
  langid = {english},
}

@article{Agents.jl,
  doi = {10.1177/00375497211068820},
  url = {https://doi.org/10.1177/00375497211068820},
  year = {2022},
  month = jan,
  publisher = {{SAGE} Publications},
  pages = {003754972110688},
  author = {George Datseris and Ali R. Vahdati and Timothy C. DuBois},
  title = {Agents.jl: a performant and feature-full agent-based modeling software of minimal code complexity},
  journal = {{SIMULATION}},
  volume = {0},
  number = {0},
}

@software{bevyegui,
  author = {Vladyslav Batyrenko},
  title = {Bevy egui},
  url = {https://github.com/vladbat00/bevy_egui},
  version = {0.36.0},
  date = {2025-09-13},
}

@article{DEIULIIS2023104527,
title = {Large scale simulation of pedestrian seismic evacuation including panic behavior},
journal = {Sustainable Cities and Society},
volume = {94},
pages = {104527},
year = {2023},
issn = {2210-6707},
doi = {https://doi.org/10.1016/j.scs.2023.104527},
url = {https://www.sciencedirect.com/science/article/pii/S2210670723001385},
author = {Melissa {De Iuliis} and Edoardo Battegazzorre and Marco Domaneschi and Gian Paolo Cimellaro and Andrea Giuseppe Bottino},
keywords = {Large-scale, Earthquake, Agent-based, Human behavior, Evacuation, Resilience, ABM},
abstract = {Understanding human behavior and predicting evacuation processes subsequently to an earthquake are critical aspects to provide valuable information to support disaster response activities. One possible and relevant aspect that characterizes human behavior in emergency situations is panic reactions, which can lead to dysfunctional and irrational responses by fugitives. Given the relevance of this component, this paper implements a panic behavior model in a large-scale agent-based model considering phenomenal parameters, such as seismic damage to the built environment, disruption of roads by earthquake-induced falling debris, and injuries of individuals. The proposed model is applied and tested in IdealCity, a virtual city simulation environment which resembles the geometry of the city of Turin, with about 900,000 inhabitants. The numerical simulations show that the inclusion of a panic behavior model increases the evacuation time despite the increased speed of agents during the evacuation process and this is probably caused by the fact that pedestrians tend to perform random actions before reaching their destination. Furthermore, existing human relationships between agents tend to convert the crowd from individual agents to group of agents that move together, and this behavior might affect the shelter saturation time of both shelters and hospitals as shown in the simulations analyzed in this paper.}
}

@article{Alrashed_Shamma_2020, 
place={Jülich, Germany}, 
title={Agent Based Modelling and Simulation of Pedestrian Crowds in Panic Situations}, 
volume={5}, 
url={https://collective-dynamics.eu/index.php/cod/article/view/A100}, 
DOI={10.17815/CD.2020.100}, 
abstractNote={The increasing occurrence of panic stampedes during mass events has motivated studying the impact of panic on crowd dynamics. Understanding the collective behaviors of panic stampedes is essential to reducing the risk of deadly crowd disasters. In this work, we use an agent-based formulation to model the collective human behavior in such crowd dynamics. We investigate the impact of panic behavior on crowd dynamics, as a specific form of collective behavior, by introducing a contagious panic parameter. The proposed model describes the intensity and spread of panic through the crowd. The corresponding panic parameter impacts each individual to represent a different variety of behaviors that can be associated with panic situations such as escaping danger, clustering, and pushing. Simulation results show contagious panic and pushing behavior, resulting in a more realistic crowd dynamics model.}, journal={Collective Dynamics}, 
author={Alrashed, Mohammed and Shamma, Jeff}, 
year={2020}, 
month={Aug.}, 
pages={463–466} }

@article{KIM2013232,
title = {Modeling pedestrian queuing using micro-simulation},
journal = {Transportation Research Part A: Policy and Practice},
volume = {49},
pages = {232-240},
year = {2013},
issn = {0965-8564},
doi = {https://doi.org/10.1016/j.tra.2013.01.018},
url = {https://www.sciencedirect.com/science/article/pii/S0965856413000256},
author = {Inhi Kim and Ronald Galiza and Luis Ferreira},
keywords = {Queue, Ticket booth, Simulation, Pedestrian},
abstract = {The system considered is a cinema ticketing booth system. A general simulation algorithm is presented as well as the system’s operating characteristics. The results of the experiment were verified by comparing them with video observation data and theoretical values. Finally, with comparative analysis of experiment data, the developed simulation model was able to replicate the situation in which pedestrians find an available booth to occupy while waiting in a queue. The model can facilitate the availability of various pedestrian flows and a range of operating times. With some efforts of computer programming, the situations where multiple booths are available were simulated to identify pedestrian movement. The developed simulation model captures important details, such as travel time, wait time, queue length and the number of waiting pedestrians with the different number of pedestrian flows and booths. The paper presents a means to designing the pedestrian operation and plan on the basis of the estimated number of people.}
}

@article{ALAM2022100527,
title = {Pedestrian movement simulation for an airport considering social distancing strategy},
journal = {Transportation Research Interdisciplinary Perspectives},
volume = {13},
pages = {100527},
year = {2022},
issn = {2590-1982},
doi = {https://doi.org/10.1016/j.trip.2021.100527},
url = {https://www.sciencedirect.com/science/article/pii/S2590198221002323},
author = {MD Jahedul Alam and Muhammad Ahsanul Habib and Devin Holmes},
}

@misc{csherratt,
  title = {Specs and Legion, two very different approaches to ECS},
  howpublished = {\url{https://csherratt.github.io/blog/posts/specs-and-legion/}},
  note = {Accessed: 2025-09-27}
}

@misc{viswalk,
  title = {Pedestrian simulation software | PTV Viswalk | PTV Group},
  howpublished = {\url{https://www.ptvgroup.com/en/products/pedestrian-simulation-software-ptv-viswalk}},
  note = {Accessed: 2025-09-27}
}

@misc{massmotion,
  title = {Oasys | MassMotion},
  howpublished = {\url{https://www.oasys-software.com/products/massmotion/}},
  note = {Accessed: 2025-09-27}
}

@misc{legionsimulator,
  title = {LEGION | Bentley Systems | Infrastructure Engineering Software Company},
  howpublished = {\url{https://br.bentley.com/software/legion/}},
  note = {Accessed: 2025-09-27}
}

@misc{anylogic,
  title = {AnyLogic: Simulation Modeling Software Tools \& Solutions},
  howpublished = {\url{https://www.anylogic.com/}},
  note = {Accessed: 2025-09-27}
}


@misc{jupedsim-performace,
  title = {JuPedSim — JuPedSim  documentation},
  howpublished = {\url{https://www.jupedsim.org/stable/history.html}},
  note = {Accessed: 2025-10-14}
}


@Article{electronics12010143,
AUTHOR = {Plauska, Ignas and Liutkevičius, Agnius and Janavičiūtė, Audronė},
TITLE = {Performance Evaluation of C/C++, MicroPython, Rust and TinyGo Programming Languages on ESP32 Microcontroller},
JOURNAL = {Electronics},
VOLUME = {12},
YEAR = {2023},
NUMBER = {1},
ARTICLE-NUMBER = {143},
URL = {https://www.mdpi.com/2079-9292/12/1/143},
ISSN = {2079-9292},
ABSTRACT = {The rapid growth of the Internet of Things (IoT) and its applications requires high computational efficiency, low-cost, and low-power solutions for various IoT devices. These include a wide range of microcontrollers that are used to collect, process, and transmit IoT data. ESP32 is a microcontroller with built-in wireless connectivity, suitable for various IoT applications. The ESP32 chip is gaining more popularity, both in academia and in the developer community, supported by a number of software libraries and programming languages. While low- and middle-level languages, such as C/C++ and Rust, are believed to be the most efficient, TinyGo and MicroPython are more developer-friendly low-complexity languages, suitable for beginners and allowing more rapid coding. This paper evaluates the efficiency of the available ESP32 programming languages, namely C/C++, MicroPython, Rust, and TinyGo, by comparing their execution performance. Several popular data and signal processing algorithms were implemented in these languages, and their execution times were compared: Fast Fourier Transform (FFT), Cyclic Redundancy Check (CRC), Secure Hash Algorithm (SHA), Infinite Impulse Response (IIR), and Finite Impulse Response (FIR) filters. The results show that the C/C++ implementations were fastest in most cases, closely followed by TinyGo and Rust, while MicroPython programs were many times slower than implementations in other programming languages. Therefore, the C/C++, TinyGo, and Rust languages are more suitable when execution and response time are the key factors, while Python can be used for less strict system requirements, enabling a faster and less complicated development process.},
DOI = {10.3390/electronics12010143}
}